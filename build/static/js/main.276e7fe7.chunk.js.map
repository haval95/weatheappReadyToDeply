{"version":3,"sources":["helper/helpers.js","components/Header/Header.jsx","components/imgs/imgs.js","components/imgs/sn.svg","components/imgs/c.svg","components/imgs/h.svg","components/imgs/hc.svg","components/imgs/hr.svg","components/imgs/lc.svg","components/imgs/lr.svg","components/imgs/s.svg","components/imgs/sl.svg","components/imgs/t.svg","sunset.png","components/citytemp/CityTemp.jsx","components/chart/Chart.jsx","components/Search/Search.jsx","components/loading/Loading.jsx","helper/TableHelper.jsx","components/weektemp/WeekTemp.jsx","helper/oneWeekTemp.js","container/WeatherApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["format","number","decimal","Math","round","toFixed","Header","props","Fragment","sm","className","todayData","predictability","humidity","wind_speed","wind_direction_compass","air_pressure","visibility","stateImgs","sn","c","h","hc","hr","lc","lr","s","sl","t","GetImg","abbr","CityTemp","location","data","sunRise","sunSet","md","lg","src","getImg","weather_state_abbr","fluid","width","alt","applicable_date","the_temp","substring","indexOf","color","sunSetIcon","weather_state_name","Chart","options","title","display","text","fontSize","fontColor","legend","position","labels","scales","yAxes","scaleLabel","labelString","xAxes","Search","onSubmit","handleSubmit","placeholder","aria-label","aria-describedby","onChange","handleChange","value","inputValue","Append","variant","type","Loading","style","height","top","animation","Th","header","map","head","index","Tr","oneDayData","min_temp","max_temp","id","WeekTemp","console","log","striped","hover","size","consolidated_weather","oneWeekTemp","temp","forEach","element","push","WeatherApp","useState","loading","WeatherData","setWeatherData","seterror","userCountry","setUserCountry","lables","setlables","datasets","setdatasets","Humidity","setHumidity","ChartData","label","fill","backgroundColor","borderColor","URL","setURL","WeatherURL","setWeatherURL","fetching","fetch","then","res","json","result","error","message","useEffect","woeid","e","preventDefault","target","sun_rise","sun_set","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.276e7fe7.chunk.js","sourcesContent":[" const format =(number,decimal=2)=>{\r\n    return(Math.round(number * 100) / 100).toFixed(decimal)\r\n}\r\n\r\nexport default format\r\n\r\n","import React from 'react'\r\nimport format from \"../../helper/helpers\";\r\nimport * as Bootstrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaCloudMoonRain ,FaWind, FaDirections,FaLowVision} from 'react-icons/fa';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        \r\n        <React.Fragment >\r\n            <Bootstrap.Col sm className=\"item\"> <FaCloudMoonRain /> Rain: {format(props.todayData.predictability,0)} %</Bootstrap.Col>\r\n            <Bootstrap.Col sm className=\"item\"> Humidity: {format(props.todayData.humidity,0)} %</Bootstrap.Col>\r\n            <Bootstrap.Col sm className=\"item\"><FaWind /> Wind: {format(props.todayData.wind_speed)} Kph</Bootstrap.Col>\r\n            <Bootstrap.Col sm className=\"item\"> <FaDirections /> Wind Direction: {(props.todayData.wind_direction_compass)}</Bootstrap.Col>\r\n            <Bootstrap.Col sm className=\"item\">Pressure: {format(props.todayData.air_pressure,0)} hPa</Bootstrap.Col>\r\n            <Bootstrap.Col sm className=\"item\"><FaLowVision /> Visibility: {format(props.todayData.visibility)} km</Bootstrap.Col>\r\n        </React.Fragment>  \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header\r\n","import sn from \"../imgs/sn.svg\";\r\nimport c from \"../imgs/c.svg\";\r\nimport h from \"../imgs/h.svg\";\r\nimport hc from \"../imgs/hc.svg\";\r\nimport hr from \"../imgs/hr.svg\";\r\nimport lc from \"../imgs/lc.svg\";\r\nimport lr from \"../imgs/lr.svg\";\r\nimport s from \"../imgs/s.svg\";\r\nimport sl from \"../imgs/sl.svg\";\r\nimport t from \"../imgs/t.svg\";\r\n\r\n const stateImgs={sn:sn, c,h,hc,hr,lc,lr,s,sl,t}\r\n\r\nexport default function GetImg(abbr) {\r\n    return stateImgs[abbr]\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sn.15dbffd6.svg\";","export default __webpack_public_path__ + \"static/media/c.f7fd242b.svg\";","export default __webpack_public_path__ + \"static/media/h.831ff042.svg\";","export default __webpack_public_path__ + \"static/media/hc.5030ee0b.svg\";","export default __webpack_public_path__ + \"static/media/hr.0c40fed9.svg\";","export default __webpack_public_path__ + \"static/media/lc.cb911034.svg\";","export default __webpack_public_path__ + \"static/media/lr.e8838808.svg\";","export default __webpack_public_path__ + \"static/media/s.2d98cbcf.svg\";","export default __webpack_public_path__ + \"static/media/sl.d39a5b7f.svg\";","export default __webpack_public_path__ + \"static/media/t.b757a57e.svg\";","export default __webpack_public_path__ + \"static/media/sunset.f0fde90e.png\";","import React from 'react'\r\nimport * as BootStrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport getImg from \"../imgs/imgs\";\r\nimport format from \"../../helper/helpers\";\r\nimport { FaSun} from 'react-icons/fa';\r\nimport sunSetIcon from \"../../sunset.png\";\r\n\r\n\r\nexport default function CityTemp({location, data,sunRise, sunSet}) {\r\n    \r\n    return (\r\n        <BootStrap.Col md={4} >\r\n            <h1 className=\"text-lg-left text-sm-center text-info\"> {location} </h1>  \r\n            \r\n            <BootStrap.Row >\r\n                <BootStrap.Col lg=\"auto\" className=\"text-left text-lg-left text-sm-center text-sm-center m-auto\" >\r\n                   \r\n                        <BootStrap.Image src={getImg(data.weather_state_abbr)} fluid  width=\"100\" alt=\"weather icon\" className=\"text-left p-0\"/>\r\n                \r\n                   \r\n                </BootStrap.Col>\r\n                \r\n                <BootStrap.Col className=\" text-lg-left text-sm-center  m-auto border border-light shadow-sm  p-4\" >\r\n                <p className=\"p-0 m-0\"> <b>Date: </b> {data.applicable_date}</p>\r\n                <p className=\"p-0 m-0\" ><b>overcast: </b> {format(data.the_temp,1)} &deg;c</p> \r\n                <p className=\"p-0 m-0\"> <b> Sun Rise: </b> {sunRise.substring(sunRise.indexOf('T') +1, sunRise.indexOf('.'))} <FaSun color=\"#FDB302\" /></p>\r\n                <p className=\"p-0 m-0\"> <b>Sun Set:</b> {sunSet.substring(sunSet.indexOf('T') +1, sunSet.indexOf('.'))} <img  src={sunSetIcon} alt=\"logo\" width=\"25\"/> </p>\r\n                <p className=\"p-0 m-0\"> <b>Sky:</b> {data.weather_state_name}</p>\r\n               \r\n                </BootStrap.Col>\r\n            </BootStrap.Row>\r\n        </BootStrap.Col>\r\n\r\n     \r\n        \r\n        \r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as BootStrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nexport default function Chart({data}) {\r\n    return (\r\n       <BootStrap.Col md className=\"mt-1 offset-md-1\">\r\n        <Line \r\n          data={data}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Tempreature and Humidity During the Week',\r\n              fontSize:20,\r\n              fontColor: 'rgb(23,162,184)',\r\n              \r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right',\r\n              labels: {\r\n                  // This more specific font property overrides the global property\r\n                  fontColor: 'rgb(100,118,108)'\r\n              }\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: 'Tempreature °C & Humidity %'\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: 'Date'\r\n                }\r\n              }],\r\n            }     \r\n          }}\r\n          />\r\n       </BootStrap.Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport * as Bootstrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaSearchLocation } from 'react-icons/fa';\r\n\r\nexport default function Search(props) {\r\n    return (\r\n        <Bootstrap.Form className=\"m-2\" onSubmit={props.handleSubmit}>\r\n          <Bootstrap.InputGroup className=\"mb-3\">\r\n            <Bootstrap.FormControl\r\n              placeholder=\"City\"\r\n              aria-label=\"Country\"\r\n              aria-describedby=\"basic-addon2\"\r\n              onChange={props.handleChange}\r\n              value={props.inputValue}\r\n            />\r\n            \r\n            <Bootstrap.InputGroup.Append>\r\n              <Bootstrap.Button variant=\"btn btn-info\" type=\"submit\" ><FaSearchLocation /></Bootstrap.Button>\r\n            </Bootstrap.InputGroup.Append>\r\n\r\n          </Bootstrap.InputGroup>\r\n        </Bootstrap.Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport * as BootStrap from 'react-bootstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <BootStrap.Container fluid  style={{height:'100vh'}}>\r\n           <BootStrap.Col className=\"m-auto text-info\" style={{position:'absolute', top:'50vh'}}>\r\n           <BootStrap.Spinner animation=\"grow\"  className=\"justify-content-md-center pr-4\" />\r\n           \r\n          <span className=\"p-3\"> Loading...</span>\r\n           </BootStrap.Col>\r\n\r\n        </BootStrap.Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport format from \"./helpers\";\r\nimport * as Bootstrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport getImg from \"../components/imgs/imgs\";\r\n\r\n\r\nfunction Th({header}) {\r\n\r\n\r\n    return (\r\n        <tr className=\"bg-info text-light border border-info shadow-sm  p-4\" >\r\n           { header.map((head, index) => <th key={index} > {head}</th>)}\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction Tr({oneDayData}) {\r\n\r\n   \r\n    return (\r\n       <tr key={oneDayData.id} className=\"border border-info\">\r\n       <td><Bootstrap.Image src={getImg(oneDayData.weather_state_abbr)} width=\"70\"  /></td>\r\n       <td> {oneDayData.applicable_date}</td>\r\n       <td> {format(oneDayData.min_temp,0)} &deg;C</td>\r\n       <td> {format(oneDayData.max_temp,0)} &deg;C</td>\r\n       <td> {format(oneDayData.wind_speed)} Kph</td>\r\n       </tr>\r\n    )\r\n}\r\n\r\n\r\nexport {\r\n    Tr,\r\n    Th\r\n}","import React from 'react'\r\nimport * as Bootstrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Tr,Th} from \"../../helper/TableHelper\"\r\n\r\n\r\nexport default function WeekTemp(props) {\r\n\r\n    console.log()\r\n    return (\r\n        <React.Fragment>\r\n            <Bootstrap.Table  striped hover size=\"sm\" >\r\n            <thead>\r\n            <Th header={[\" Icon\", \"Date\", \"Low\", \"High\", \"Wind Speed\"]}/>\r\n            </thead>\r\n            <tbody>\r\n            <Tr oneDayData={props.data.consolidated_weather[0]} />\r\n            <Tr oneDayData={props.data.consolidated_weather[1]} />\r\n            <Tr oneDayData={props.data.consolidated_weather[2]} />\r\n            <Tr oneDayData={props.data.consolidated_weather[3]} />\r\n            <Tr oneDayData={props.data.consolidated_weather[4]} />\r\n            <Tr oneDayData={props.data.consolidated_weather[5]} />\r\n            \r\n            </tbody>\r\n              \r\n            \r\n            </Bootstrap.Table>\r\n        \r\n        </React.Fragment>\r\n    )\r\n}\r\n","\r\nexport default function oneWeekTemp(data,index) {\r\n   let temp=[];\r\n  \r\n    data.forEach(element => {\r\n        temp.push(element[index])\r\n    });\r\n    return temp\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as BootStrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from '../components/Header/Header'\r\nimport City from \"../components/citytemp/CityTemp\"\r\nimport Chart from \"../components/chart/Chart\";\r\nimport Search from \"../components/Search/Search\";\r\nimport Loading from \"../components/loading/Loading\";\r\nimport WeekTemp from \"../components/weektemp/WeekTemp\";\r\nimport oneWeekTemp from \"../helper/oneWeekTemp\";\r\n\r\n\r\n\r\nexport default function WeatherApp() {\r\n\r\n   \r\n    const [WeatherData, setWeatherData] = useState({ loading:false, data:{}})\r\n    const [error, seterror] = useState(null)\r\n    const [userCountry, setUserCountry] = useState(\"\");\r\n    const [lables, setlables] = useState([])\r\n    const [datasets, setdatasets] = useState([])\r\n    const [Humidity, setHumidity] = useState([])\r\n    const ChartData = { labels:lables,\r\n    datasets: [\r\n      {\r\n        label: \"Tempreture °c\",\r\n        data: datasets,\r\n        fill: true,\r\n        backgroundColor: \"rgba(23,162,184,0.2)\",\r\n        borderColor: \"rgba(23,162,184)\"\r\n      },\r\n      {\r\n        label: \"Humidity %\",\r\n        data: Humidity,\r\n        fill: true,\r\n        borderColor: \"#FFC107\",\r\n        backgroundColor:\"#C88C3233\"\r\n      }\r\n    \r\n    ]}\r\n    const [URL, setURL] = useState(\"https://www.metaweather.com/api/location/search/?query=Baghdad\")\r\n    const [WeatherURL, setWeatherURL] = useState(\"\")\r\n    \r\n\r\n\r\n\r\n    const  fetching =  (URL) =>\r\n        fetch(URL)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n              return result\r\n          },\r\n          (error) => {\r\n            seterror(error.message)\r\n          }\r\n      );\r\n\r\n         \r\n      useEffect(() => {\r\n          fetching(URL)\r\n         .then((result) => {\r\n                            setWeatherURL(\"https://www.metaweather.com/api/location/\"+result[0].woeid)\r\n                          })\r\n       }, [URL]);\r\n\r\n\r\n       useEffect(() => {\r\n           fetching(WeatherURL)\r\n           .then((result)=> setWeatherData({loading:true, data:result}))\r\n          \r\n          \r\n       }, [ WeatherURL]);\r\n\r\n       useEffect(() => {\r\n        if(WeatherData.data && WeatherData.loading) {\r\n          setdatasets(oneWeekTemp(WeatherData.data.consolidated_weather,\"the_temp\"))\r\n          setlables(oneWeekTemp(WeatherData.data.consolidated_weather,\"applicable_date\"))\r\n          setHumidity(oneWeekTemp(WeatherData.data.consolidated_weather,\"humidity\"))\r\n           \r\n        }\r\n       }, [WeatherData])\r\n\r\n \r\n       const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n          setURL(\"https://www.metaweather.com/api/location/search/?query=\"+userCountry)\r\n          setUserCountry(\"\") \r\n       }\r\n\r\n\r\n       const handleChange =(e)=> setUserCountry(e.target.value)\r\n       \r\n\r\n      \r\n\r\n    return (\r\n    <React.Fragment>\r\n        {\r\n        (WeatherData.data) && (WeatherData.loading) \r\n        \r\n        ?<BootStrap.Container fluid  >\r\n            <BootStrap.Row className=\"justify-content-sm-center bg-info p-4 text-light\">\r\n                <Header todayData={WeatherData.data.consolidated_weather[0]} />\r\n            </BootStrap.Row>\r\n\r\n            <BootStrap.Row  className=\"justify-content-sm-center  p-1 text-light\">\r\n                <Search handleSubmit={handleSubmit} handleChange={handleChange} inputValue={userCountry} />\r\n            </BootStrap.Row>\r\n              \r\n\r\n            <BootStrap.Container>\r\n              <BootStrap.Row className=\"mx-auto \">\r\n                    <City\r\n                    location={WeatherData.data.title}\r\n                    data={WeatherData.data.consolidated_weather[0] }\r\n                    sunRise={WeatherData.data.sun_rise }\r\n                    sunSet={WeatherData.data.sun_set }\r\n                    />\r\n                    <Chart data={ChartData} />\r\n                </BootStrap.Row>\r\n\r\n\r\n                <BootStrap.Row className=\"mt-5 \">\r\n                  <WeekTemp data={WeatherData.data} />\r\n                </BootStrap.Row>\r\n            \r\n            </BootStrap.Container>\r\n\r\n\r\n\r\n        </BootStrap.Container>\r\n     \r\n        : <Loading />\r\n      }\r\n    </React.Fragment>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import WeatherApp from \"./container/WeatherApp\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <WeatherApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}